app Travelease {
  wasp: {
    version: "^0.11.1"
  },
  title: "Travelease",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx"
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int    @id @default(autoincrement())
    username String @unique
    password String
    trips    Trip[]
psl=}

entity Trip {=psl
    id             Int             @id @default(autoincrement())
    destination    String
    startDate      DateTime
    endDate        DateTime
    itinerary      String
    user           User            @relation(fields: [userId], references: [id])
    userId         Int
    accommodations Accommodation[]
    transports     Transport[]
psl=}

entity Accommodation {=psl
    id       Int      @id @default(autoincrement())
    name     String
    address  String
    checkIn  DateTime
    checkOut DateTime
    trip     Trip     @relation(fields: [tripId], references: [id])
    tripId   Int
psl=}

entity Transport {=psl
    id        Int      @id @default(autoincrement())
    type      String
    departure DateTime
    arrival   DateTime
    trip      Trip     @relation(fields: [tripId], references: [id])
    tripId    Int
psl=}

action createTrip {
  fn: import { createTrip } from "@server/actions.js",
  entities: [User, Trip]
}

action createAccommodation {
  fn: import { createAccommodation } from "@server/actions.js",
  entities: [User, Trip, Accommodation]
}

action createTransport {
  fn: import { createTransport } from "@server/actions.js",
  entities: [User, Trip, Transport]
}

query getTrips {
  fn: import { getTrips } from "@server/queries.js",
  entities: [User, Trip]
}

query getTripDetails {
  fn: import { getTripDetails } from "@server/queries.js",
  entities: [User, Trip, Accommodation, Transport]
}

route DashboardRoute { path: "/", to: DashboardPage }
page DashboardPage {
  component: import { Dashboard } from "@client/pages/Dashboard.jsx",
  authRequired: true
}

route TripDetailRoute { path: "/trip/:tripId", to: TripDetailPage }
page TripDetailPage {
  component: import { TripDetail } from "@client/pages/TripDetail.jsx",
  authRequired: true
}